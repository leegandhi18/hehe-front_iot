version: '3'
services:
  postgres:
    image: postgres
    restart: always
    container_name: postgres
    build:
      context: ./database
      dockerfile: database.dev.dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hehe_database
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - monitoring
    ports:
      - 5433:5432
  #     ###########################################################################################################################
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3005:3000'
    networks:
      - monitoring
    depends_on:
      - influxdb
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana2/grafana.ini:/etc/grafana/grafana.ini
    user: root
  influxdb:
    image: influxdb:1.8.3
    container_name: influxdb
    ports:
      - '8086:8086'
    networks:
      - monitoring
    environment:
      - INFLUXDB_DB=backend
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    tty: true
    stdin_open: true
    volumes:
      - ./influx/config:/etc/influxdb
      - ./influxdb:/var/lib/influxdb
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: backend.dev.dockerfile
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    networks:
      - monitoring
    environment:
      - NODE_ENV=development
      - PORT=3000
      - LOGGER_LEVEL=debug
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=hehe_database
      - DB_ID=postgres
      - DB_PASS=postgres
      - DB_DIALECT=postgres
    restart: "unless-stopped"
    command: "npm start"

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: frontend.dev.dockerfile
    volumes:
      - ./frontend:/app
    ports:
      - "8080:8080"
    networks:
      - monitoring
volumes:
  grafana:
  influxdb:
  backend:
  frontend:


networks:
  monitoring: